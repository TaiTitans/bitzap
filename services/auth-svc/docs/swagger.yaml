basePath: /
definitions:
  model.ChangePasswordRequest:
    properties:
      new_password:
        minLength: 6
        type: string
      old_password:
        type: string
    required:
    - new_password
    - old_password
    type: object
  model.EmailData:
    properties:
      html_body:
        type: string
      subject:
        type: string
      text_body:
        type: string
      to_email:
        type: string
      to_name:
        type: string
      variables:
        additionalProperties:
          type: string
        type: object
    type: object
  model.EmailVerificationRequest:
    properties:
      email:
        type: string
      user_id:
        type: integer
    type: object
  model.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  model.PasswordResetRequest:
    properties:
      email:
        type: string
    type: object
  model.RegisterRequest:
    properties:
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      password:
        minLength: 6
        type: string
      phone:
        type: string
      username:
        maxLength: 50
        minLength: 3
        type: string
    required:
    - email
    - first_name
    - last_name
    - password
    - username
    type: object
  model.ResetPasswordRequest:
    properties:
      confirm_password:
        type: string
      new_password:
        minLength: 6
        type: string
      token:
        type: string
    required:
    - confirm_password
    - new_password
    - token
    type: object
  model.UpdateProfileRequest:
    properties:
      avatar_url:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      phone:
        type: string
    required:
    - first_name
    - last_name
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: Authentication service API
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Auth Service API
  version: "1.0"
paths:
  /auth/forgot-password:
    post:
      consumes:
      - application/json
      description: Send password reset email to user
      parameters:
      - description: Password reset request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.PasswordResetRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Password reset email sent
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Request password reset
      tags:
      - auth
  /auth/login:
    post:
      consumes:
      - application/json
      description: Authenticate user and return access token
      parameters:
      - description: Login credentials
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Login successful
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Invalid credentials
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Login user
      tags:
      - auth
  /auth/password/{user_id}:
    put:
      consumes:
      - application/json
      description: Change user password
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: integer
      - description: Password change data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.ChangePasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Password changed successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: User not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Change user password
      tags:
      - auth
  /auth/profile/{user_id}:
    get:
      consumes:
      - application/json
      description: Get user profile by user ID
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: User profile
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: User not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get user profile
      tags:
      - auth
    put:
      consumes:
      - application/json
      description: Update user profile information
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: integer
      - description: Profile update data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.UpdateProfileRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Profile updated successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: User not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update user profile
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Register a new user account
      parameters:
      - description: Registration data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: User created successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "409":
          description: User already exists
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Register new user
      tags:
      - auth
  /auth/reset-password:
    post:
      consumes:
      - application/json
      description: Reset user password using reset token
      parameters:
      - description: Password reset data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.ResetPasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Password reset successful
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Reset password with token
      tags:
      - auth
  /auth/verify-email:
    get:
      consumes:
      - application/json
      description: Verify user email with token
      parameters:
      - description: Verification token
        in: query
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Verify user email
      tags:
      - auth
  /email/reset-password:
    post:
      consumes:
      - application/json
      description: Send password reset email to user
      parameters:
      - description: Password reset request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.PasswordResetRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Email sent successfully
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Send password reset email
      tags:
      - email
  /email/send:
    post:
      consumes:
      - application/json
      description: Send custom email with provided data
      parameters:
      - description: Custom email data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.EmailData'
      produces:
      - application/json
      responses:
        "200":
          description: Email sent successfully
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Send custom email
      tags:
      - email
  /email/verify:
    post:
      consumes:
      - application/json
      description: Send verification email to user
      parameters:
      - description: Email verification request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.EmailVerificationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Email sent successfully
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Send email verification
      tags:
      - email
  /email/welcome:
    post:
      consumes:
      - application/json
      description: Send welcome email to new user
      parameters:
      - description: Welcome email request
        in: body
        name: request
        required: true
        schema:
          additionalProperties:
            type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: Email sent successfully
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Send welcome email
      tags:
      - email
  /redis/test:
    get:
      consumes:
      - application/json
      description: Test Redis operations including set, get, and increment counter
      produces:
      - application/json
      responses:
        "200":
          description: Success response with test data and counter
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Test Redis connection
      tags:
      - redis
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
